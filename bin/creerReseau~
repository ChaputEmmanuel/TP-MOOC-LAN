#!/bin/bash

VERBOSE=True

BASEDIR=$PWD
BRCTL=/sbin/brctl
IP=/sbin/ip
MKFIFO=/usr/bin/mkfifo
MKDIR=/bin/mkdir
RM=/bin/rm
TOUCH=/usr/bin/touch
TRUE=/bin/true

if [ $UID != 0 ] ; then
   echo "T'es pas root, tu passes ta route, ..."
   exit
fi

LABCONF=$BASEDIR/lab.conf
LABSTARTUP=$BASEDIR/lab.startup

if [ $VERBOSE == True ] ; then
  echo "* Chargement du fichier de configuration"
fi

if [ -f $LABCONF ] ; then 
   . $LABCONF
fi

if [ $VERBOSE == True ] ; then
  echo "* Paramétrage du lab"
fi

if [ -f $LABSTARTUP ] ; then 
   . $LABSTARTUP
fi

if [ $VERBOSE == True ] ; then
   echo "* Création des machines"
fi
for h in $HOSTS
do
   if [ $VERBOSE == True ] ; then
      echo -n "  . $h : " 
   fi
   $IP netns del $h > /dev/null 2>&1 ||$TRUE
   $IP netns add $h
   $IP netns exec $h $IP link set lo up
   if [ $VERBOSE == True ] ; then
      echo "ok"
   fi
done

# Création des switch
#====================
if [ $VERBOSE == True ] ; then
    echo "* Création des bridges"
fi
for sw in $BRIDGES
do
    if [ $VERBOSE == True ] ; then
	echo "    Création de $sw"
    fi
    $BRCTL addbr $sw
    if [ $VERBOSE == True ] ; then
	echo "    Activation de $sw"
    fi
    $IP link set $sw up
    if [ $VERBOSE == True ] ; then
	echo "    $sw OK"
    fi
done

# Création des réseaux
#=====================
if [ $VERBOSE == True ] ; then
   echo "* Création des réseaux"
fi

IFLIST=""
for l in $LINKS
do
   # Format h:i[:@]!h:i[:@]
   #-----------------------
   if [ $VERBOSE == True ] ; then
       echo "    Link $l ..."
   fi
   # Parsing source
   #---------------
   src=`echo $l| cut -d! -f1`
   srch=`echo $src|cut -d: -f1`
   if [ -z "$srch" ] ; then
      echo "*** No source host defined in '$l'"
      exit
   fi
   srcIsBr=no
   if [ -z "`$IP netns list|grep $srch`" ] ; then
       for br in $BRIDGES
       do
	   if [ $br == $srch ] ; then
               if [ $VERBOSE == True ] ; then
	           echo "       $srch is a bridge"
	       fi
	       srcIsBr=yes
	   fi
       done
       if [ "$srcIsBr" == "no" ] ; then
	   echo "*** Unknown host '$srch'"
	   exit
       fi
   fi
   srci=`echo $src|cut -d: -f2`
   if [ -z "$srci" ] ; then
      echo "*** No source interface defined in '$l'"
      exit
   fi
   IFLIST="$IFLIST $srch:$srci"
   srca=`echo $src|cut -d: -f3`

   # Parsing destination
   #--------------------
   dst=`echo $l| cut -d! -f2`
   dsth=`echo $dst|cut -d: -f1`
   if [ -z "$dsth" ] ; then
      echo "*** No destination host defined in '$l'"
      exit
   fi
   dstIsBr=no
   if [ -z "`$IP netns list|grep $dsth`" ] ; then
       for br in $BRIDGES
       do
	   if [ $br == $dsth ] ; then
               if [ $VERBOSE == True ] ; then
	           echo "       Dst is a bridge"
	       fi
	       dstIsBr=yes
	   fi
       done
       if [ "$dstIsBr" == "no" ] ; then
	   echo "*** Unknown host '$dsth'"
	   exit
       fi
   fi
   dsti=`echo $dst|cut -d: -f2`
   if [ -z ""$dsti -a "$dstIsBr" == "no" ] ; then
      echo "*** No destination interface defined in '$l'"
      exit
   fi
   IFLIST="$IFLIST $dsth:$dsti"
   dsta=`echo $dst|cut -d: -f3`
   if [ $VERBOSE == True ] ; then
       echo "       $srch ($srci)  <-> $dsth ($dsti)"
       if [ -n "$srca" ] ; then
	   echo "       $srch : $srca"
       fi   
       if [ -n "$dsta" ] ; then
	   echo "       $dsth : $dsta"
       fi   
   fi

   # I only build links where dstIsBr or !srcIsBr
   #---------------------------------------------
   if [ "$srcIsBr" == "yes" -a "$dstIsBr" == "no" ] ; then
      echo "Forbiden bridge to host link : $l"
   fi

   # Build the link
   #---------------
   if [ "$dstIsBr" == "no" ] ; then
      # Source is then *not* a bridge
      $IP netns exec $srch $IP link add $srci type veth peer name $dsti netns $dsth
      $IP netns exec $srch $IP link set $srci up
      $IP netns exec $dsth $IP link set $dsti up
      if [ -n ""$srca ] ; then
         $IP netns exec $srch $IP addr add $srca dev $srci
      fi
      if [ -n ""$dsta ] ; then
         $IP netns exec $dsth $IP addr add $dsta dev $dsti
      fi
   else
      if [ $VERBOSE == True ] ; then
	  echo -n "    Adding $dsth.$dsti ... "
      fi
      if [ "$srcIsBr" == "no" ] ; then
          $IP link add $dsth.$dsti type veth peer name $srci netns $srch
	  $IP link set $dsth.$dsti up
	  $IP netns exec $srch $IP link set $srci up
	  if [ -n "$srca" ] ; then
              $IP netns exec $srch $IP addr add $srca dev $srci
	  fi
      else    # Br2br
           if [ $VERBOSE == True ] ; then
              echo -n  " connecting to $srch.$srci"
          fi
          $IP link add $dsth.$dsti type veth peer name $srch.$srci
	  $IP link set $dsth.$dsti up
	  $IP link set $srch.$srci up
          $BRCTL addif $srch $srch.$srci
      fi
      $BRCTL addif $dsth $dsth.$dsti
      if [ $VERBOSE == True ] ; then
          echo " OK"
      fi
   fi
done

#--------------------------------------------------------------------
# Run startup script
#--------------------------------------------------------------------
if [ $VERBOSE == True ] ; then
    echo "* Lancement des scripts"
fi
# We need a file in the main /etc
$TOUCH /etc/ns-startup
$MKDIR /etc/netns > /dev/null 2>&1
for h in $HOSTS
do
   if [ -f ${h}.startup ] ; then
      $MKDIR /etc/netns/$h > /dev/null 2>&1
      $CP ${h}.startup /etc/netns/$h/ns-startup
      $IP netns exec $h /bin/bash /etc/ns-startup
   fi
done

#--------------------------------------------------------------------
# Snoop
#--------------------------------------------------------------------
if [ $VERBOSE == True ] ; then
    echo "* Lancement des tcpdump"
fi

WIRESHARK_IF=""
$RM -rf /tmp/nssi > /dev/null 2>&1 ||$TRUE
$MKDIR /tmp/nssi > /dev/null 2>&1 ||$TRUE
$RM ./.tcpdump-pids > /dev/null 2>&1 ||$TRUE
if [ ""$DUMPIF == "all" ] ; then
   DUMPIF=$IFLIST
fi
for snoopi in $DUMPIF
do
   h=`echo $snoopi|cut -d: -f1`
   if [ -z ""$h ] ; then
      echo "*** No snoop host defined in '$snoopi'"
      exit
   fi
   if [ -z "`$IP netns list|grep $h`" ] ; then
      echo "*** Unknown snoop host '$h'"
      exit
   fi
   i=`echo $snoopi|cut -d: -f2`
   if [ -z ""$i ] ; then
      echo "*** No snoop interface defined in '$snoopi'"
      exit
   fi

   $MKDIR /tmp/nssi/$h > /dev/null 2>&1 ||$TRUE
   $MKFIFO /tmp/nssi/$h/$i

   WIRESHARK_IF="$WIRESHARK_IF -i /tmp/nssi/$h/$i "

   $IP netns exec $h $BASEDIR/run-tcpdump $i /tmp/nssi/$h/$i > /dev/null 2>&1 & 
   echo $! >> ./.tcpdump-pids
done

#--------------------------------------------------------------------
# Open consoles
#--------------------------------------------------------------------
if [ $VERBOSE == True ] ; then
    echo "* Ouverture des consoles"
fi

$RM ./.console-pids > /dev/null 2>&1 ||$TRUE

for h in $CONSOLES
do
   if [ -z "`$IP netns list|grep $h`" ] ; then
      echo "*** Unknown host '$h'"
   else 
      $IP netns exec $h xterm -title "$h"&
      echo $! >> ./.console-pids
   fi
   
done

# open PDF viewer ?
# if $DUMPIF run wireshark ?

echo "Please add the following options to wireshark :"
echo "wireshark $WIRESHARK_IF"


